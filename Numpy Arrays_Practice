#!/usr/bin/env python
# coding: utf-8

# In[1]:


import numpy


# In[2]:


import numpy as np


# In[3]:


from numpy import *


# In[6]:


a = np.array([1, 2, 3, 4, 5], dtype=float)


# In[7]:


a


# In[8]:


type(a)


# In[10]:


a.shape


# In[11]:


len(a)


# In[12]:


a.size


# In[13]:


a[2:,]


# In[16]:


a[:2]


# In[17]:


a[1-3]


# In[18]:


a[3]


# In[19]:


a[0]


# In[23]:


a[0] = 10


# In[24]:


a


# In[46]:


a = np.array([[1,2,3],[4,5,6]], dtype=float)


# In[47]:


a


# In[31]:


a.ndim


# In[32]:


a.size


# In[33]:


a.shape


# In[37]:


a.size


# In[35]:


len(a)


# In[36]:


type(a)


# In[38]:


a[0,0]


# In[39]:


a[0,1]


# In[41]:


a[0,2]


# In[42]:


a[1,0]


# In[43]:


a[1,2]


# In[49]:


a


# In[48]:


a[1,1]


# In[50]:


a[1:,]


# In[51]:


a[:1]


# In[52]:


a[:,2]


# In[53]:


a[:,1]


# In[54]:


a[:,0]


# In[56]:


a[-1:, -2:]


# In[57]:


a.shape


# In[58]:


a.dtype


# In[59]:


len(a)


# In[60]:


2 in a


# In[61]:


6 in a


# In[62]:


10 in a


# In[63]:


7 in a


# In[64]:


0 in a


# In[77]:


b = np.array(range(16), dtype=float)


# In[78]:


b


# In[84]:


b = b.reshape((8,2))


# In[85]:


b


# In[86]:


b.shape


# In[87]:


z = np.array([1,2,3,4])


# In[88]:


z1 = z


# In[89]:


z2 = z.copy()


# In[90]:


z[0] = 0


# In[91]:


z


# In[92]:


z1


# In[93]:


z2


# In[94]:


z.tolist()


# In[95]:


list(z)


# In[96]:


z4 = np.array([1,2,3], float)


# In[97]:


x = z4.tostring()


# In[98]:


x


# In[99]:


np.fromstring(x)


# In[100]:


z4.fill(0)


# In[101]:


z4


# In[102]:


z4.fill(14)


# In[103]:


z4


# In[105]:


a = np.array(range(10), dtype=float).reshape((2,5))


# In[106]:


a


# In[110]:


a.transpose()


# In[113]:


a = np.array([[1,2,3],[4,5,6]])


# In[114]:


a.ndim


# In[115]:


a.flatten()


# In[116]:


a = np.array([1,2,3])
b = np.array([4,5,6,7])
c = np.array([3,4,6,7,8])


# In[118]:


np.concatenate((a,b,c))


# In[125]:


a = np.array([[1,2],[3,4]])
b = np.array([[5,6],[7,8]])


# In[121]:


a.ndim


# In[126]:


b.ndim


# In[127]:


np.concatenate((a,b))


# In[128]:


np.concatenate((a,b), axis = 0)


# In[129]:


np.concatenate((a,b), axis = 1)


# In[137]:


a = np.array([1,2,3])


# In[138]:


a[:,np.newaxis]


# In[139]:


a[:,np.newaxis].shape


# In[140]:


a[np.newaxis,:]


# In[141]:


a[np.newaxis,:].shape


# In[143]:


np.arange(10, dtype= float)


# In[149]:


np.arange(0,6,1, dtype=int)


# In[150]:


np.ones((2,3))


# In[151]:


np.zeros(7, dtype=int)


# In[152]:


a = np.array([[1,2,3],[3,4,5]], dtype=float)


# In[153]:


np.zeros_like(a)


# In[154]:


np.ones_like(a)


# In[157]:


np.identity(10, dtype=float)


# In[162]:


np.eye(10, k = -3, dtype=float)


# In[163]:


a = np.array([1,2,3], dtype=float)
b = np.array([4,5,6], dtype=float)


# In[164]:


a + b


# In[165]:


a - b


# In[166]:


a * b


# In[167]:


a / b


# In[169]:


np.round(a/b)


# In[170]:


a % b


# In[171]:


a ** b


# In[172]:


b ** a


# In[173]:


b / a


# In[174]:


np.round(b / a)


# In[180]:


a = np.array([[1,2],[3,4]])
b = np.array([[5,6],[7,8]])


# In[186]:


a / b


# In[187]:


a = np.array([[1,2],[2,34],[4,5],[6,78]])
b = np.array([-1,3])


# In[188]:


a


# In[189]:


b


# In[190]:


a + b


# In[191]:


b + a


# In[192]:


a - b


# In[193]:


b - a


# In[195]:


a * b


# In[196]:


b * a


# In[199]:


np.round(a / b)


# In[200]:


np.round (b / a)


# In[201]:


a % b


# In[202]:


b % a


# In[208]:


a = np.zeros((2,2))


# In[209]:


a


# In[205]:


b = np.array([-1, 3])


# In[206]:


b


# In[210]:


a + b


# In[211]:


a + b [:,np.newaxis]


# In[233]:


a = sign((2,2))


# In[217]:


np.arcsin(a)


# In[222]:


a = np.sqrt([25,49,144])


# In[223]:


a


# In[224]:


a = np.array([1.2,2.4,5.78], dtype=float)


# In[225]:


a


# In[226]:


np.floor(a)


# In[227]:


np.sin(a)


# In[228]:


np.ceil(a)


# In[230]:


np.rint(a)


# In[231]:


np.pi


# In[232]:


np.e


# # END#
